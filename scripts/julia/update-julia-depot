#! /usr/bin/env bash

source /usr/share/Modules/init/bash
module load exfel julia

set -euxo pipefail

# Check for a GPU. CUDA.jl needs to precompiled on a machine with a GPU for the
# precompile files to be valid, so if we don't have one then error out.
nvidia-smi

export JULIA_MAX_NUM_PRECOMPILE_FILES=50

julia -e '
empty!(Base.DEPOT_PATH)
push!(Base.DEPOT_PATH, "/gpfs/exfel/sw/software/julia-depot")


import Pkg

packages = [
    "ADTypes",
    "BenchmarkTools",
    "Bonito",
    "CairoMakie",
    "ClusterManagers",
    "Cthulhu",
    "CUDA",
    "Dagger",
    "DataFrames",
    "DataFramesMeta",
    "DifferentialEquations",
    "DifferentiationInterface",
    "DimensionalData",
    "DSP",
    "DynamicQuantities",
    "EllipsisNotation",
    "Enzyme",
    "FFTW",
    "FiniteDiff",
    "ForwardDiff",
    "H5Zzstd",
    "HDF5",
    "HTTP",
    "IJulia",
    "Interpolations",
    "KernelAbstractions",
    "Makie",
    "MakieExtra",
    "Measurements",
    "MPI",
    "NaNStatistics",
    "NonlinearSolve",
    "Observables",
    "OhMyThreads",
    "PairPlots",
    "Plots",
    "ProgressMeter",
    "PythonCall",
    "ReadableRegex",
    "Revise",
    "SpecialFunctions",
    "SQLite",
    "ThreadPinning",
    "Tullio",
    "UnicodePlots",
    "WGLMakie"
]

Pkg.Registry.update()
Pkg.activate(; temp=true)
for package in packages
    @info "Adding $(package)..."
    Pkg.add(package; preserve=Pkg.PRESERVE_NONE)
    Pkg.rm(package)
end
'
