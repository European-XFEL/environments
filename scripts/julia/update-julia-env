#! /usr/bin/env bash

source /usr/share/Modules/init/bash
module load exfel julia

set -euxo pipefail

hostname

# Check for a GPU. CUDA.jl needs to precompiled on a machine with a GPU for the
# precompile files to be valid, so if we don't have one then error out.
nvidia-smi

export JULIA_MAX_NUM_PRECOMPILE_FILES=10

cd $JULIA_EXFEL_ENV

julia --project -e '
empty!(Base.DEPOT_PATH)
push!(Base.DEPOT_PATH, "/gpfs/exfel/sw/software/julia-depot")

import Pkg
Pkg.update()

# Set the CUDA runtime version. This is necessary for the generated package
# images to be valid across different nodes.
import CUDA
CUDA.set_runtime_version!(v"12.6")
'

# Import CUDA again in a fresh session to ensure it's precompiled with the
# previously set runtime version.
julia --project -e '
empty!(Base.DEPOT_PATH)
push!(Base.DEPOT_PATH, "/gpfs/exfel/sw/software/julia-depot")

import Pkg
Pkg.precompile()

import CUDA
CUDA.versioninfo()
'

manifest_path="${JULIA_EXFEL_ENV}/Manifest-v1.11.toml"
project_path="${JULIA_EXFEL_ENV}/Project.toml"

# Allow errors only when checking the diff
set +e
git diff --quiet ${manifest_path}
diff_exit_code=$?
set -e

if [[ ${diff_exit_code} -eq 1 ]]; then
    git add ${manifest_path}
    git add ${project_path}
    git commit -m "Automatic Julia environment update"
    git push
fi
